final USER_HOME = System.properties['user.home']
final LOCAL_REPOSITORY = "${USER_HOME}/.localIvy"
final JAVA_VERSION = '1.6'

buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: 'scala'
apply plugin: 'groovy'

group = 'ru.jdev'
version = '0.1.0'

targetCompatibility = JAVA_VERSION
sourceCompatibility = JAVA_VERSION

buildDir = relativePath("${USER_HOME}/builds/jem")

repositories {
    mavenCentral()
}

dependencies {

    groovy 'org.codehaus.groovy:groovy-all:2.0.5'

    scalaTools 'org.scala-lang:scala-compiler:2.9.2',
            'org.scala-lang:scala-library:2.9.2'

    compile 'com.google.appengine:appengine-api-1.0-sdk:1.7.3',
            'com.google.code.gson:gson:2.2.2',
            'org.scala-lang:scala-library:2.9.2'

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0',
            'com.google.appengine:appengine-testing:1.7.3',
            'com.google.appengine:appengine-api-labs:1.7.3',
            'com.google.appengine:appengine-api-stubs:1.7.3'
}

compileTestGroovy.dependsOn compileTestScala

uploadArchives {

    repositories {
        ivy {

            url LOCAL_REPOSITORY
            layout 'pattern', {
                final artifactDir = '[organization]/[module]'
                artifact "${artifactDir}/[artifact]-[revision].[ext]"
                ivy "${artifactDir}/ivy.xml"
            }

        }
    }

}

uploadArchives.doFirst {
    final artifact = "${LOCAL_REPOSITORY}/${project.group}/${project.name}/${project.name}-${version}.jar"
    if (new File(artifact).exists()) {
        throw new GradleException("Artifact ${artifact} already exist")
    }
}